
Objetos de pagina: concepto que separa y agrupa en clases,
los distintos elementos y funcionalidades de cada pagina dentro de una web
Se busca agrupar codigo los mas representativo posible de esas dunciones y elementos,
para aplciar los test sobre ellos, y ante cambios en el codifo fuente,
poder adaptar los test de manera mas sencilla y rapida.
Asumen la responsabilidad de detectar los elementos y funcviones de una pagina dentro de una web
Cada funcion de un page object se responsabiliza a obtener elementos segun su categoria,
y a hacer assertions a esos elementos

Los parametros By: se usan para definir lo que el metodo debe hacer, pero el momento
de hacerlo puede ser posterior, evitando el problema de que los elementos (objetos) HTML
no se hayan obtenido aun en el cuerpo de un HTTP request message

DOM : El DOM permite el acceso dinámico a través de la programación para acceder, añadir
y cambiar dinámicamente contenido estructurado en documentos con lenguajes como ECMAScript (JavaScript).ç

Espera Implicita (Implicit Wait): evita usar tiempos excesivos de espera de carga del DOM

Condiciones Esperadas: son acciones que dependen de la biblioteca WebDriverWait de Selenium.
Se utilizan para esperar que se produzcan acciones en la pagina web, para ser testeadas.
Sobre todo aquellas que necesitan de un tiempo a priori desconocido o implicito de carga.
Algunas Expected Conditions son:
- alert_is_present(): espera la aparicion de una alerta en el browser
- element_located_selection_state_to_be(locator,is_selected): espera encontrar y obtener un elemento (locator = tupla By),
y espera que se cumpla la condicion booleanda is_selected para saber si esta seleccionado.
- element_located_to_be_select(locator): espera tener el elemento y que este seleccionado, ya que tiene un parametro TRUE implicito.
Similar al anterior item
- frame_to_be_avalaible_and_switch_to_it(locator): se fija que exista un frame, y si existe lo cambia (switchea) a el, para seleccionar el elemnto.
- invisibility_of_element_located(locator): espera a que el elemento localizado sea invisible
- visibility_of(element): Espera que el elemento esté visible y que su size sea mayor que cero
- url_contains(url): donde espera que el url contenga un substring (case sensitive), verificando que exista.
Trabaja sobre las distintas variaciones de la URL buscando alguna patron de test.

Teclas Especiales: se puede automatizar el envio de teclas especiales, para simular el patron de tecleo
o ingreso de un usuario humano, es decir, nombre_usuario+TABULACION+clave+TAB+click_boton

Ejecucion por CMD de Windows del proyecto de Test: python -m unittest newtoursTest.py
Esto en la carpeta donde esta guardado en disco el proyecto de Testing
Se debe ejecutar el comando: pip install selenium en la consola cdm de Windows

Guardar un Reporte de la Ejecucion del Test:
Se adiciona una libreria (biblioteca) denominada unittest-xml-reporting
El comando de install es : pip install unittest-xml-reporting
Comando cmd: python -m xmlrunner newtoursTest.py
Esto ejecuta el metodo main creado en el archivo principal, que tiene el metodo XMLTestRunner()
